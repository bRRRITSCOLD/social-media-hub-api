version: "3"

services:
  app:
    container_name: "docker_compose_devcontainer_social_media_hub_api_app"
    build:
      context: .
      dockerfile: Dockerfile.devcontainer
      args:
        # Update VARIANT to pick a node version: 10, 12, 14
        VARIANT: 14
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        USER_UID: 1000
        USER_GID: 1000
    volumes:
      - ..:/workspace:cached
    command: sleep infinity
  mongodb:
    container_name: "docker_compose_devcontainer_social_media_hub_api_mongodb"
    image: mongo:latest
    restart: always
    volumes:
      - mongodb-data:/data/db
    network_mode: service:app
  redis:
    container_name: "docker_compose_devcontainer_social_media_hub_api_redis"
    image: redis:latest
    restart: always
    network_mode: service:app
    volumes:
      - redis-data:/data
  localstack:
    container_name: "docker_compose_devcontainer_social_media_hub_api_localstack"
    image: localstack/localstack:latest
    restart: always
    network_mode: service:app
    environment:
      - SERVICES=${SERVICES-s3,lambda,cloudformation,apigateway,dynamodb }
      - DEBUG=${DEBUG-true }
      - DATA_DIR=${DATA_DIR-/tmp/localstack/data }
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-local }
      - KINESIS_ERROR_PROBABILITY=${KINESIS_ERROR_PROBABILITY- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=/tmp/localstack
    volumes:
      # - "${TMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

volumes:
  mongodb-data:
  redis-data:
